---
#######################################
#######################################
## Translate Document GitHub Actions ##
#######################################
#######################################
name: Translate Document

#############################
# Start the job manually #
#############################
on: [push, workflow_dispatch]

permissions:
    id-token: write
    contents: read

env:
  INPUT_CONTAINER_NAME: translatesource
  OUTPUT_CONTAINER_NAME: translatetarget



jobs:
  ###################################
  # Upload source document to Azure #
  ###################################
  upload-source:
    runs-on: ubuntu-latest
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v3
      ##########################
      # Login to Azure         #
      ##########################
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
      # - name: 'Create containers with Azure CLI'
      #   run: |
      #       az storage container create \
      #         --name $INPUT_CONTAINER_NAME \
      #         --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} \
      #         --auth-mode login
      #       az storage container create \
      #         --name $OUTPUT_CONTAINER_NAME \
      #         --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} \
      #         --auth-mode login

      # - name: 'Upload source document with Azure CLI'
      #   run: |
      #       end=`date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
      #       sas=`az storage container generate-sas -n $INPUT_CONTAINER_NAME --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} --https-only --permissions dlrw --expiry $end -o tsv`
      #       az storage blob upload \
      #         --overwrite true \
      #         --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} \
      #         --container-name $INPUT_CONTAINER_NAME \
      #         --name ${{ vars.DOCUMENT_PATH }} \
      #         --file ${{ vars.DOCUMENT_PATH }} \
      #         --sas-token $sas

      - name: 'Translate document to language'
        run: |
          end=`date -u -d "30 minutes" '+%Y-%m-%dT%H:%MZ'`
          input_sas=`az storage container generate-sas -n $INPUT_CONTAINER_NAME --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} --https-only --permissions lr --expiry $end -o tsv`
          output_sas=`az storage container generate-sas -n $OUTPUT_CONTAINER_NAME --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} --https-only --permissions lw --expiry $end -o tsv`

          az rest --method post \
            --url ${{ secrets.TRANSLATOR_API_URI }}translator/text/batch/v1.0/batches \
            --headers Ocp-Apim-Subscription-Key=${{ secrets.TRANSLATOR_API_KEY }} \
            --body "{"inputs": [{"source": { "sourceUrl": "https://${{ secrets.STORAGE_ACCOUNT_NAME }}.blob.core.windows.net/$INPUT_CONTAINER_NAME$input_sas"}, "targets": [{"targetUrl": "https://${{ secrets.STORAGE_ACCOUNT_NAME }}.blob.core.windows.net/$INPUT_CONTAINER_NAME$input_sas","language": "heb"}]}]}"
            
  # translate:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: NPM Install
  #       run: npm install -g bats
  #     - name: BATS
  #       run: bats -v
  # download-all:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: NPM Install
  #       run: npm install -g bats
  #     - name: BATS
  #       run: bats -v
  # pull-request-all:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: NPM Install
  #       run: npm install -g bats
  #     - name: BATS
  #       run: bats -v
